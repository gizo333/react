import React from "react";
import Information from "../components/inform_user";
import Sidebar from "../components/sidebar";
import { Link } from 'react-router-dom';
import "./style/Register.css"
import axios from 'axios';
import { useState } from 'react';
import { 
    handleCheckToken 
} from '../components/check_jwt'; 



const Register = () => {
    const [fullname, setFullName] = useState("");
    const [email, setEmail] = useState("");
    const [password, setPassword] = useState("");
    const [confirmPassword, setConfirmPassword] = useState("");
    const [isPasswordVisible, setPasswordVisible] = useState(false);
    const sidebarStyle = {
        fontFamily: 'Playfair Display, sans-serif',
      };


      const regSubmit = async (e) => {
        e.preventDefault();

         // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª–µ–π –Ω–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
         if (password !== confirmPassword) {
            alert("–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç!");
            return;
        }
    
        try{
            const response = await axios.post('http://127.0.0.1:8000/users/', {
                fullname: fullname,
                email: email,
                password: password,
            });

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–æ–∫–µ–Ω –≤ –æ—Ç–≤–µ—Ç–µ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ –≤ localStorage
            const token = response.data.token;
            if (token) {
            localStorage.setItem('token', token);
            console.log('–¢–æ–∫–µ–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ localStorage:', localStorage.getItem('token'));
        } else {
            console.log('–¢–æ–∫–µ–Ω –æ—Ç—Å—É—Ç—Å–≤—É–µ—Ç')
        }

       
        

            console.log('–û—Ç–≤–µ—Ç:', response.data);
            setFullName("");
            setEmail("");
            setPassword("");
            setConfirmPassword("");

            window.location.replace("/about");


        } catch (error) {
            console.error("–û—à–∏–±–∫–∞", error);
            if (error.response && error.response.data) {
                alert(error.response.data.detail);
            } else {
                alert("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞.");
            }
        }
    };

    
    return(
        
        <div className="reg_container" style={sidebarStyle}>
    <Sidebar />
    <div className="reg_content">
        <Information />

        <div className="wrapperWelcome">
        <div className="welcomeText">
            <h3>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</h3>
            <p>–ú—ã —Ä–∞–¥—ã –≤–∏–¥–µ—Ç—å –≤–∞—Å –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ –∏ –±–ª–∞–≥–æ–¥–∞—Ä–∏–º
            –∑–∞ –ø—Ä–æ—è–≤–ª–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä–µ—Å –∏ –∂–µ–ª–∞–Ω–∏–µ —Å—Ç–∞—Ç—å
            —á–∞—Å—Ç—å—é –Ω–∞—à–µ–≥–æ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞!</p>
            <p>–ü—Ä–æ—Ü–µ—Å—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø—Ä–æ—Å—Ç –∏ –∑–∞–π–º–µ—Ç —É –≤–∞—Å –≤—Å–µ–≥–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç.
                 –ü—Ä–æ—Å—Ç–æ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É –Ω–∏–∂–µ.</p>
                 <p>–ï—Å–ª–∏ —É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, <Link to="/enter">–≤–æ–π–¥–∏—Ç–µ!</Link></p>     
        </div>
        </div>
        <form className="registrationForm" onSubmit={regSubmit}>


        <div className="formGroup">
                <label htmlFor="fullname"></label>
                <input className="reg-input"  type="text" id="fullname" value={fullname} onChange={e => setFullName(e.target.value)}  placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è" required />
            </div>
            
            <div className="formGroup">
                <label htmlFor="email"></label>
                <input className="reg-input" type="email" id="email" value={email} onChange={e => setEmail(e.target.value)}  placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à email" required autoComplete="email"  />
            </div>

            <div className="formGroup">
            <label htmlFor="password"></label>
                <input
                    className="reg-input"
                    type={isPasswordVisible ? "text" : "password"}
                    id="password"
                    value={password}
                    onChange={e => setPassword(e.target.value)}
                    placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –ø–∞—Ä–æ–ª—å"
                    required
                    autoComplete="new-password"
                />
                <span 
                    className="toggle-password-icon"
                    onClick={() => setPasswordVisible(!isPasswordVisible)}
                >
                    {isPasswordVisible ? "üëÅÔ∏è" : "üôà"}
                </span>
            </div>

            <div className="formGroup">
            <label htmlFor="confirmPassword"></label>
                <input
                    className="reg-input"
                    type={isPasswordVisible ? "text" : "password"}
                    id="confirmPassword"
                    value={confirmPassword}
                    onChange={e => setConfirmPassword(e.target.value)}
                    placeholder="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤–∞—à –ø–∞—Ä–æ–ª—å"
                    required
                    autoComplete="new-password"
                />
                <span 
                    className="toggle-password-icon"
                    onClick={() => setPasswordVisible(!isPasswordVisible)}
                >
                    {isPasswordVisible ? "üëÅÔ∏è" : "üôà"}
                </span>
            </div>

            <button className="button-style" type="submit">–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è</button>

            <button  type="button" onClick={handleCheckToken}>
            –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–æ–∫–µ–Ω
          </button>

          
        </form>

        <footer className="wrapper-footer">
            <div className="footer-content">
                <p>–ú—ã —É–≤–∞–∂–∞–µ–º –≤–∞—à—É –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å –∏ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –≤–∞—à–∏—Ö –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.
                –î–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –Ω–∞—à–µ–π –ü–æ–ª–∏—Ç–∏–∫–æ–π –ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏.</p>
            </div>

        </footer>
    </div>
    
</div>

    )
    
}

export default Register;